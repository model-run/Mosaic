name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: |
          cd web
          pnpm install

      - name: Build project
        run: |
          cd web
          pnpm run build

      - name: Prepare GitHub Pages
        run: |
          # Create docs directory and copy built files
          mkdir -p docs
          cp -r web/out/* docs/
          
          # Ensure assets directory exists in docs
          mkdir -p docs/assets/css docs/assets/js
          
          # Copy CSS and JS files to docs/assets directory
          if [ -f "docs/assets/css/style.css" ]; then
            echo "CSS file already exists in docs/"
          else
            echo "/* GitHub Pages CSS */" > docs/assets/css/style.css
          fi
          
          if [ -f "docs/assets/js/site.js" ]; then
            echo "JS file already exists in docs/"
          else
            echo "/* GitHub Pages JS */" > docs/assets/js/site.js
          fi
          
          # Clean up temporary files
          rm -rf web/out

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4